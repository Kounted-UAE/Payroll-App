import { useId } from 'react'
import clsx from 'clsx'


export function LogoMark({
  invert = false, // unused for now
  filled = false, // unused for now
  className,
  ...props
}: React.ComponentPropsWithoutRef<'svg'> & {
  invert?: boolean
  filled?: boolean
}) {
  return (
    <svg width="182" 
    height="181" 
    viewBox="0 0 181 181" // Include the small circle but remove extra padding
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    className={className} // Maintains square aspect ratio, height controlled by parent
    {...props}>
    <path d="M160.283 100.397C160.44 144.579 124.751 180.524 80.5681 180.681C36.3856 180.838 0.441287 145.148 0.284282 100.965C0.127277 56.7828 35.817 20.8385 79.9995 20.6815C124.182 20.5245 160.126 56.2142 160.283 100.397Z" fill="url(#paint0_linear_132_13)"/>
    <path d="M181.071 20.0001C181.11 31.0457 172.188 40.0318 161.142 40.071C150.097 40.1103 141.11 31.1879 141.071 20.1422C141.032 9.09661 149.954 0.11054 161 0.0712891C172.046 0.0320379 181.032 8.95447 181.071 20.0001Z" fill="url(#paint1_linear_132_13)"/>
    <defs>
    <linearGradient id="paint0_linear_132_13" x1="160.024" y1="27.5767" x2="17.5623" y2="188.822" gradientUnits="userSpaceOnUse">
    <stop stopColor="#51a2ff"/>
    <stop offset="1" stopColor="#2b7fff"/>
    </linearGradient>
    <linearGradient id="paint1_linear_132_13" x1="181.006" y1="1.79531" x2="145.391" y2="42.1066" gradientUnits="userSpaceOnUse">
    <stop stopColor="#51a2ff"/>
    <stop offset="1" stopColor="#2b7fff"/>
    </linearGradient>
    </defs>
    </svg>
  )
}



export function LogoText({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<'svg'> & {
  invert?: boolean
  filled?: boolean
  fillOnHover?: boolean
}) {
  const rawId = useId()
  const uid = rawId.replace(/:/g, '')

  return (
    <svg width="120" height="20" viewBox="0 0 6221 1036" fill="none" xmlns="http://www.w3.org/2000/svg"
    className={className} // Height controlled by parent, width scales proportionally
    {...props}>
<path d="M249 1035.84C175.96 1035.84 116.12 1019.12 69.4798 985.68C23.7198 951.36 0.839844 903.84 0.839844 843.12C0.839844 780.64 20.1998 732.68 58.9198 699.24C98.5198 664.92 156.6 639.84 233.16 624L461.52 579.12C461.52 533.36 450.96 499.04 429.84 476.16C409.6 452.4 380.12 440.52 341.4 440.52C303.56 440.52 274.08 449.32 252.96 466.92C231.84 483.64 218.2 508.72 212.04 542.16L12.7198 532.92C25.9198 455.48 60.6798 396.96 117 357.36C174.2 316.88 249 296.64 341.4 296.64C447 296.64 526.2 321.72 579 371.88C632.68 422.04 659.52 495.52 659.52 592.32V833.88C659.52 854.12 662.6 867.76 668.76 874.8C675.8 880.96 685.92 884.04 699.12 884.04H718.92V1020C712.76 1021.76 702.64 1023.52 688.56 1025.28C675.36 1027.04 662.16 1027.92 648.96 1027.92C620.8 1027.92 594.4 1023.08 569.76 1013.4C546 1003.72 526.64 987.44 511.68 964.56C496.72 940.8 489.24 907.36 489.24 864.24L506.4 877.44C497.6 909.12 481.76 936.84 458.88 960.6C436.88 984.36 407.84 1002.84 371.76 1016.04C336.56 1029.24 295.64 1035.84 249 1035.84ZM296.52 899.88C329.08 899.88 357.68 893.72 382.32 881.4C406.96 868.2 426.32 849.28 440.4 824.64C454.48 800 461.52 770.96 461.52 737.52V703.2L300.48 737.52C268.8 743.68 244.6 754.24 227.88 769.2C212.04 783.28 204.12 801.76 204.12 824.64C204.12 848.4 212.04 866.88 227.88 880.08C243.72 893.28 266.6 899.88 296.52 899.88Z" fill={invert ? 'white' : '#162947'}/>
<path d="M1075.3 1035.84C1015.46 1035.84 963.539 1020.88 919.539 990.96C876.419 960.16 842.979 917.48 819.219 862.92C796.339 807.48 784.899 741.92 784.899 666.24C784.899 590.56 796.779 525.44 820.539 470.88C844.299 415.44 877.739 372.76 920.859 342.84C964.859 312.04 1016.34 296.64 1075.3 296.64C1125.46 296.64 1168.58 307.2 1204.66 328.32C1241.62 348.56 1269.34 376.72 1287.82 412.8V82.7998H1485.82V1020H1297.06L1293.1 915.72C1273.74 953.56 1244.7 983.04 1205.98 1004.16C1168.14 1025.28 1124.58 1035.84 1075.3 1035.84ZM1139.98 884.04C1171.66 884.04 1198.5 875.68 1220.5 858.96C1242.5 842.24 1259.22 818.04 1270.66 786.36C1282.1 753.8 1287.82 713.76 1287.82 666.24C1287.82 617.84 1282.1 577.8 1270.66 546.12C1259.22 513.56 1242.5 489.36 1220.5 473.52C1198.5 456.8 1171.66 448.44 1139.98 448.44C1093.34 448.44 1056.38 468.24 1029.1 507.84C1001.82 546.56 988.179 599.36 988.179 666.24C988.179 732.24 1001.82 785.04 1029.1 824.64C1057.26 864.24 1094.22 884.04 1139.98 884.04Z" fill={invert ? 'white' : '#162947'}/>
<path d="M1859.41 1020L1600.69 312.48H1807.93L1975.57 820.68L2141.89 312.48H2349.13L2089.09 1020H1859.41Z" fill={invert ? 'white' : '#162947'}/>
<path d="M3256.57 1020V312.48H3434.77L3442.69 519.72L3417.61 513.12C3424.65 460.32 3438.73 418.08 3459.85 386.4C3481.85 354.72 3509.13 331.84 3541.69 317.76C3574.25 303.68 3609.89 296.64 3648.61 296.64C3699.65 296.64 3742.77 307.64 3777.97 329.64C3814.05 351.64 3841.33 382.88 3859.81 423.36C3879.17 462.96 3888.85 510.04 3888.85 564.6V1020H3690.85V630.6C3690.85 592.76 3687.77 560.64 3681.61 534.24C3675.45 507.84 3664.45 488.04 3648.61 474.84C3632.77 460.76 3610.77 453.72 3582.61 453.72C3541.25 453.72 3509.57 469.12 3487.57 499.92C3465.57 529.84 3454.57 573.4 3454.57 630.6V1020H3256.57Z" fill={invert ? 'white' : '#162947'}/>
<path d="M4323.35 1020C4250.31 1020 4196.63 1003.28 4162.31 969.84C4127.99 935.52 4110.83 881.4 4110.83 807.48V146.16H4308.83V783.72C4308.83 818.04 4315.88 841.36 4329.96 853.68C4344.92 866 4366.92 872.16 4395.96 872.16H4494.96V1020H4323.35ZM3997.32 460.32V312.48H4494.96V460.32H3997.32Z" fill={invert ? 'white' : '#162947'}/>
<path d="M4624.88 1020V312.48H4822.88V1020H4624.88Z" fill={invert ? 'white' : '#162947'}/>
<path d="M5314.56 1035.84C5242.4 1035.84 5179.48 1020.88 5125.8 990.96C5073 960.16 5031.64 917.04 5001.72 861.6C4972.68 806.16 4958.16 741.04 4958.16 666.24C4958.16 590.56 4972.68 525.44 5001.72 470.88C5031.64 415.44 5073 372.76 5125.8 342.84C5178.6 312.04 5241.08 296.64 5313.24 296.64C5383.64 296.64 5444.8 312.04 5496.72 342.84C5548.64 373.64 5588.68 417.64 5616.84 474.84C5645.88 532.04 5660.4 600.24 5660.4 679.44V719.04H5162.76C5165.4 775.36 5180.36 817.16 5207.64 844.44C5235.8 871.72 5272.76 885.36 5318.52 885.36C5351.96 885.36 5379.68 878.32 5401.68 864.24C5424.56 850.16 5440.84 828.6 5450.52 799.56L5649.84 811.44C5631.36 881.84 5592.2 936.84 5532.36 976.44C5472.52 1016.04 5399.92 1035.84 5314.56 1035.84ZM5162.76 597.6H5457.12C5454.48 545.68 5439.96 506.96 5413.56 481.44C5388.04 455.92 5354.6 443.16 5313.24 443.16C5271.88 443.16 5237.56 456.8 5210.28 484.08C5183.88 510.48 5168.04 548.32 5162.76 597.6Z" fill={invert ? 'white' : '#162947'}/>
<path d="M5795.97 1020V312.48H5983.41L5990.01 518.4L5975.49 514.44C5986.93 443.16 6007.17 391.68 6036.21 360C6065.25 328.32 6105.29 312.48 6156.33 312.48H6221.01V476.16H6156.33C6119.37 476.16 6089.01 481 6065.25 490.68C6041.49 500.36 6023.45 515.76 6011.13 536.88C5999.69 558 5993.97 586.6 5993.97 622.68V1020H5795.97Z" fill={invert ? 'white' : '#162947'}/>
<circle cx="4715" cy="120" r="120" fill={invert ? 'white' : '#162947'}/>
<circle cx="2751" cy="660" r="360" fill={invert ? 'white' : '#162947'}/>
<circle cx="2751" cy="660" r="200"fill={invert ? '#162947' : 'white'}/>
</svg>

  )
}


export function Logo({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<'div'> & {
  invert?: boolean
  filled?: boolean
  fillOnHover?: boolean
}) {
  return (
    <div className={clsx('flex items-center gap-4 h-12', className)} {...props}>
      <LogoMark 
        invert={invert} 
        filled={filled} 
        className="h-12 w-12 flex-shrink-0"
      />
      <LogoText 
        invert={invert} 
        filled={filled} 
        fillOnHover={fillOnHover}
        className="h-12 w-40 flex-shrink-0"
      />
    </div>
  )
}